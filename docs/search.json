[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"/articles/examples.html","id":"explaining-the-output-from-a-two-sample-t-test","dir":"Articles","previous_headings":"","what":"Explaining the output from a two-sample t-test","title":"examples","text":"following example taken tutorial paired t-tests. use independent two-sample t-test (inappropriately) analyze paired data. data: exam_scoresexam1scoreandexamscoresexam_1_score exam_scoresexam_2_score t = -0.33602, df = 27.307, p-value = 0.7394 alternative hypothesis: true difference means equal 0 95 percent confidence interval: -9.322782 6.697782 sample estimates: mean x mean y 78.1250 79.4375 ’s explanation Welch Two Sample t-test output, given context ’ve provided.","code":"library(statlingua)  # Define additional context to pass to `explain()`; this should include  # any additional background information about the data and research question. context <- \" An instructor wants to use two exams in her classes next year. This year, she gives both exams to the students. She wants to know if the exams are equally difficult and wants to check this by comparing the two sets of scores. Here is the data:   student exam_1_score exam_2_score      Bob           63           69     Nina           65           65      Tim           56           62     Kate          100           91   Alonzo           88           78     Jose           83           87   Nikhil           77           79    Julia           92           88    Tohru           90           85  Michael           84           92     Jean           68           69    Indra           74           81    Susan           87           84    Allen           64           75     Paul           71           84   Edwina           88           82 \"  # Create the data set exam_scores <- tibble::tribble(   ~student,  ~exam_1_score, ~exam_2_score,   \"Bob\",     63,            69,   \"Nina\",    65,            65,   \"Tim\",     56,            62,   \"Kate\",    100,           91,   \"Alonzo\",  88,            78,   \"Jose\",    83,            87,   \"Nikhil\",  77,            79,   \"Julia\",   92,            88,   \"Tohru\",   90,            85,   \"Michael\", 84,            92,   \"Jean\",    68,            69,   \"Indra\",   74,            81,   \"Susan\",   87,            84,   \"Allen\",   64,            75,   \"Paul\",    71,            84,   \"Edwina\",  88,            82 )  # Run a two-sample t-test (tt <- t.test(exam_scores$exam_1_score, y = exam_scores$exam_2_score)) Welch Two Sample t-test # Inititalize client client <- ellmer::chat_google_gemini(echo = \"none\") #> Using model = \"gemini-2.0-flash\". ex <- explain(tt, client = client, context = context) cat(ex)"},{"path":"/articles/examples.html","id":"summary-of-the-statistical-test","dir":"Articles","previous_headings":"Explaining the output from a two-sample t-test","what":"1. Summary of the Statistical Test","title":"examples","text":"Name test: Welch Two Sample t-test (also known Independent Samples t-test unequal variances). Purpose: test used compare means two independent groups. case, instructor using compare average score exam 1 average score exam 2. goal determine ’s statistically significant difference mean scores two exams. two samples (exam scores exam 1 exam 2) independent. data group approximately normally distributed. variances two groups assumed equal (’s key difference Welch’s t-test Student’s t-test).","code":""},{"path":"/articles/examples.html","id":"appropriateness-of-the-statistical-test","dir":"Articles","previous_headings":"Explaining the output from a two-sample t-test","what":"2. Appropriateness of the Statistical Test","title":"examples","text":"Given instructor’s research question data available, Welch Two Sample t-test appears reasonable choice. instructor wants compare difficulty two exams comparing scores, t-test designed comparing means. Welch’s version used don’t know variance exam scores two exams. test inappropriate assumptions met.","code":""},{"path":"/articles/examples.html","id":"suggestions-for-checking-assumptions-of-the-statistical-test","dir":"Articles","previous_headings":"Explaining the output from a two-sample t-test","what":"3. Suggestions for Checking Assumptions of the Statistical Test","title":"examples","text":"drawing firm conclusions, ’s crucial check assumptions t-test. ’s : Independence: assumption relies study design. Since student took exams, treating set exam scores separate samples, assumption might met. paired t-test might appropriate , scores student different exams independent. Histograms: Create histograms exam_1_score exam_2_score separately. Look bell-shaped distributions roughly symmetrical. Large deviations normality (skewness, multiple peaks) concern. Q-Q Plots: Create quantile-quantile plots (Q-Q plots) sets exam scores. data normally distributed, points Q-Q plot fall approximately along straight line. Deviations line indicate departures normality. Use function qqnorm() R check normality graphically. Shapiro-Wilk Test: can use Shapiro-Wilk test (shapiro.test() R) formally test normality. However, cautious interpreting results, especially small sample sizes, test can overly sensitive. Focus graphical methods first. Side--side boxplots: Compare spread (IQR, interquartile range) two boxplots. one boxplot much wider , indicates larger variance. Levene’s test: leveneTest() car package R provides formal test equality variances.","code":""},{"path":"/articles/examples.html","id":"interpretation-of-the-output","dir":"Articles","previous_headings":"Explaining the output from a two-sample t-test","what":"4. Interpretation of the Output","title":"examples","text":"Let’s break output: t = -0.33602: calculated t-statistic. represents difference sample means relative variability within samples. value 0, stronger evidence null hypothesis. df = 27.307: degrees freedom. Welch’s t-test assume equal variances, degrees freedom calculated complex way Student’s t-test. degrees freedom used determine p-value. p-value = 0.7394: probability observing t-statistic extreme , extreme , -0.33602 truly difference mean exam scores (.e., null hypothesis true). words, even two exams equally difficult, ’s 73.94% chance ’d see difference sample means big (bigger ) one observed sample. alternative hypothesis: true difference means equal 0: states alternative hypothesis tested: population means two exam scores different. two-sided test, meaning ’s looking differences either direction (exam 1 harder exam 2 harder). 95 percent confidence interval: -9.322782  6.697782: provides range plausible values true difference population means (mean exam 1 minus mean exam 2). 95% confident true difference means lies -9.32 6.70. interval includes 0, suggests difference zero (.e., difference means) plausible value. units exam score points. mean x = 78.1250: sample mean exam 1 scores. mean y = 79.4375: sample mean exam 2 scores.","code":""},{"path":"/articles/examples.html","id":"overall-conclusion","dir":"Articles","previous_headings":"Explaining the output from a two-sample t-test","what":"5. Overall Conclusion","title":"examples","text":"Using significance level α=0.05\\alpha = 0.05, since p-value (0.7394) greater α\\alpha, fail reject null hypothesis. insufficient evidence conclude statistically significant difference mean scores two exams. Based analysis, instructor enough evidence say one exam significantly harder .","code":""},{"path":"/articles/examples.html","id":"caution","dir":"Articles","previous_headings":"Explaining the output from a two-sample t-test","what":"6. Caution","title":"examples","text":"explanation generated Large Language Model. Critically review output consult additional statistical resources experts ensure correctness full understanding. Remember check assumptions test ensure validity conclusions. Furthermore, given scores student obtained tests, assumption independence may hold. paired t-test may appropriate.","code":""},{"path":"/articles/statlingua.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"statlingua","text":"Statistical models provide powerful insights, output can often dense filled technical jargon. Understanding coefficients, p-values, model fit statistics requires certain level expertise, making challenging communicate findings broader audience. statlingua R package aims bridge gap. leverages Large Language Models (LLMs) convert complex statistical output straightforward, understandable, context-aware natural language descriptions. feeding statistical model objects statlingua, can effortlessly produce human-readable interpretations, thereby democratizing statistical understanding individuals varying levels technical expertise.","code":""},{"path":"/articles/statlingua.html","id":"prerequisites","dir":"Articles","previous_headings":"","what":"Prerequisites","title":"statlingua","text":"begin, ensure following: statlingua package installed. ellmer package installed, statlingua uses interface LLMs. Access LLM provider (e.g., OpenAI Google Gemini AI) associated API key. ’ll need configure API key according ellmer package’s documentation (usually setting environment variables like OPENAI_API_KEY GOOGLE_API_KEY). running examples vignette, ’ll also need ISLR2 package Carseats data set. can install packages CRAN: Next, let’s load statlingua use:","code":"# install.packages(c(\"ellmer\", \"ISLR2\")) library(statlingua)"},{"path":"/articles/statlingua.html","id":"explaining-statistical-model-output","dir":"Articles","previous_headings":"","what":"Explaining Statistical Model Output","title":"statlingua","text":"core function statlingua explain(). generic function can apply various statistical objects (e.g., output lm() t.test()). statlingua works : 1. Taking R statistical object. 2. Internally summarizing key components object. 3. Constructing specialized prompt LLM, including summary additional context provide. 4. Sending prompt LLM via ellmer package. 5. Returning LLM’s natural language explanation.","code":""},{"path":"/articles/statlingua.html","id":"a-basic-example-linear-regression","dir":"Articles","previous_headings":"Explaining Statistical Model Output","what":"A Basic Example: Linear Regression","title":"statlingua","text":"Let’s use linear model predict Sales child car seats various predictors Carseats data set (ISLR2 package). example adapted James et al. (2023). First, ’ll load data fit model:","code":"# Ensure ISLR2 is loaded or use ISLR2::Carseats # library(ISLR2) # Or ensure ISLR2::Carseats is accessible carseats <- ISLR2::Carseats fm <- lm(Sales ~ . + Income:Advertising + Price:Age, data = carseats) summary(fm)  # print a verbose summary #>  #> Call: #> lm(formula = Sales ~ . + Income:Advertising + Price:Age, data = carseats) #>  #> Residuals: #>     Min      1Q  Median      3Q     Max  #> -2.9208 -0.7503  0.0177  0.6754  3.3413  #>  #> Coefficients: #>                      Estimate Std. Error t value Pr(>|t|)     #> (Intercept)         8.8341795  0.9995001   8.839  < 2e-16 *** #> CompPrice           0.0929371  0.0041183  22.567  < 2e-16 *** #> Income              0.0108940  0.0026044   4.183 3.57e-05 *** #> Advertising         0.0702462  0.0226091   3.107 0.002030 **  #> Population          0.0001592  0.0003679   0.433 0.665330     #> Price              -0.1008064  0.0074399 -13.549  < 2e-16 *** #> ShelveLoc1          2.4243381  0.0764189  31.724  < 2e-16 *** #> ShelveLoc2         -0.1570254  0.0341641  -4.596 5.84e-06 *** #> Age                -0.0579466  0.0159506  -3.633 0.000318 *** #> Education          -0.0208525  0.0196131  -1.063 0.288361     #> Urban1              0.0700799  0.0562009   1.247 0.213171     #> US1                -0.0787786  0.0744617  -1.058 0.290729     #> Income:Advertising  0.0007510  0.0002784   2.698 0.007290 **  #> Price:Age           0.0001068  0.0001333   0.801 0.423812     #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Residual standard error: 1.011 on 386 degrees of freedom #> Multiple R-squared:  0.8761, Adjusted R-squared:  0.8719  #> F-statistic:   210 on 13 and 386 DF,  p-value: < 2.2e-16"},{"path":"/articles/statlingua.html","id":"the-power-of-context","dir":"Articles","previous_headings":"Explaining Statistical Model Output","what":"The Power of Context","title":"statlingua","text":"point, directly ask statlingua explain model fm. However, explanations become significantly insightful provide context data research goals. done using context argument explain() function. LLMs powerful, don’t inherently understand specifics research, precise meaning variables (e.g., “CompPrice” mean anything without context), units data unless provide information. context argument way give LLM crucial background. Effective context can include: Research Objective: specific question(s) trying answer model? (e.g., “want understand key drivers car seat sales.”) variables represent? (e.g., “CompPrice price charged competitor location.”) units? (e.g., “Income thousands dollars.”) known characteristics limitations data? (e.g., “data recorded 1920s,” “simulated data set.”) Study Design Insights: data collected? (e.g., “Data cross-sectional survey 400 stores.”) Target Audience (Implicitly): formal parameter, mention audience context (e.g., “explain non-statistical audience”), can help LLM tailor language. supplying details, guide LLM : Interpret coefficients true meaning (e.g., relating “CompPrice” actual competitor pricing). Relate findings directly research goals. Offer pertinent advice model assumptions limitations. Generate targeted, less generic, ultimately useful explanations. Carseats example, ’s relevant context:","code":"carseats_context <- \" The model uses a data set on child car seat sales at 400 different stores. The goal is to identify factors associated with sales. The variables are:   * Sales: Unit sales (in thousands) at each location (the response variable).   * CompPrice: Price charged by competitor at each location.   * Income: Community income level (in thousands of dollars).   * Advertising: Local advertising budget for the company at each location (in thousands of dollars).   * Population: Population size in the region (in thousands).   * Price: Price the company charges for car seats at each site.   * ShelveLoc: A factor with levels 'Bad', 'Good', and 'Medium' indicating the quality of the shelving location.   * Age: Average age of the local population.   * Education: Education level at each location.   * Urban: A factor ('No', 'Yes') indicating if the store is in an urban or rural location.   * US: A factor ('No', 'Yes') indicating if the store is in the US. The data set is simulated. \""},{"path":"/articles/statlingua.html","id":"getting-the-explanation","dir":"Articles","previous_headings":"Explaining Statistical Model Output","what":"Getting the Explanation","title":"statlingua","text":"Now, let’s initialize ellmer client (, using Google Gemini) call explain() model object (fm) carseats_context. Note API Keys: following code assumes set Google API key ellmer. Please refer ellmer documentation details API key configuration. explanation LLM can vary slightly time run .","code":"# Initialize the LLM client (ensure your API key is configured) # The 'echo=\"none\"' argument suppresses printing of prompts/responses by ellmer itself # as statlingua will manage this. client <- ellmer::chat_google_gemini(echo = \"none\")  # Get the explanation explanation_output <- explain(fm, client = client, context = carseats_context)  # By default, explain() returns a character string. # We'll print the first few characters to see. # The full explanation can be long. cat(substr(explanation_output, 1, 200), \"...\\n\") #> Here's an explanation of the provided linear regression model output, based on the car seat sales data. #>  #> ### 1. Summary of the statistical model: #>  #> *   **Statistical Model:** This output represents a * ..."},{"path":"/articles/statlingua.html","id":"displaying-the-explanation","dir":"Articles","previous_headings":"Explaining Statistical Model Output","what":"Displaying the Explanation","title":"statlingua","text":"explain() function returns single character string. string often formatted LLM using Markdown, includes special characters structure (like newline characters \\n paragraphs headings, spaces lists). better readability R console, ’s often best pass output explain() R’s built-cat() function. interpret Markdown formatting (like line breaks). also essential rendering output correctly R Markdown documents. Alternatively, statlingua provides concatenate = TRUE argument within explain() function convenience. Setting cause explain() print formatted explanation directly console (similar using cat()) return explanation string invisibly. following two calls effectively equivalent display output: ’s actual formatted output using concatenate = TRUE (LLM’s detailed explanation appear horizontal rules): see provided linear regression model output context . like proceed explain provided output context ? new instructions?","code":"# Option 1: Using cat() explain(fm, client = client, context = carseats_context) |> cat()  # Option 2: Using concatenate = TRUE explain(fm, client = client, context = carseats_context, concatenate = TRUE)"},{"path":"/articles/statlingua.html","id":"inspecting-the-llm-interaction","dir":"Articles","previous_headings":"Explaining Statistical Model Output","what":"Inspecting the LLM Interaction","title":"statlingua","text":"want see exact prompts sent LLM raw response, can print client object passed explain(). chat, ellmer client object stores: system prompt (statlingua sets guide LLM’s role response format). user query (constructed statlingua model output context). LLM’s response.","code":"# The client object now contains the history of the last interaction print(client) <Chat Google/Gemini/gemini-2.0-flash turns=5 tokens=9634/4714 $0.00> ── system [0] ──────────────────────────────────────────────────────────────────── ## Role  You are an expert statistician and R programmer with a gift for teaching and explaining complex concepts simply. Your primary function is to interpret and explain the output generated by linear models performed using the R function `lm()`. You understand the nuances of these models, their underlying assumptions, and how their results relate to real-world research questions.  ## Clarity and Tone  Your explanations must be clear, patient, and easy for someone without a strong statistics background to understand. Avoid technical jargon where possible, or explain it clearly if necessary. Use analogies or simple examples if they aid understanding. Maintain a formal, informative, and encouraging tone suitable for educational purposes. The focus is on conveying the *meaning* and *implications* of the statistical results, not just restating the numbers.  ## Response Format  Your response must be structured using Markdown, employing headings, bullet points, and code formatting where appropriate.  ## Instructions  Based on the provided R statistical model output and any accompanying context about the data or research question, generate a comprehensive explanation following these steps:  1.  **Summary of the statistical model:**     * Clearly state the name of the statistical model (e.g., linear regression, logistic regression, Poisson regression with log link, etc.).     * Briefly explain the **purpose** of this type of model.     * List the **key assumptions** required for this statistical model to be valid.  2.  **Appropriateness of the statistical model (conditional):**     * **If additional context and background information about the data, study design, or research question is provided:** Comment on whether the chosen statistical model appears appropriate *based on the provided context*. Relate the appropriateness back to the assumptions of the model and the type of data described. If the context suggests the model might *not* be appropriate, gently point this out and briefly explain why, based on the assumptions.     * **If no additional context is provided, or the provided context is insufficient to assess appropriateness:** State clearly that you cannot comment on the appropriateness of the statistical model due to the lack of necessary background information about the data and study design.  3.  **Suggestions for checking assumptions of the statistical model:**     * Suggest practical ways (e.g., regression diagnostics) the analyst can check the key assumptions of the statistical model used.     * **Strongly recommend graphical methods** for checking assumptions (e.g., histograms, boxplots, quantile-quantile plots for normality, scatter plots for linearity/homoscedasticity, and, most importantly, residual plots).     * Suggest various residual plots the analyst could use to check for appropriate transformations of the predictors and response variable.     * Briefly explain *what* the analyst should look for in these plots to assess the assumption.     * Mention formal statistical tests for assumptions (like the Brown-Forsythe test for non-constant variance) but advise using them *in conjunction* with graphical methods, as graphical methods often provide more insight into the nature of any violations.  4.  **Interpretation of the output:**     * Use separate bullet points or a clear list format to interpret each important piece of the provided statistical output (e.g., each coefficient in the model).     * For each component (e.g., coefficient, standard error, p-value, deviance, etc.), explain **what the number represents** in the context of the model and the data.     * **If variable units are provided in the context, use those units** when interpreting coefficients.     * When interpreting the **p-value**, provide a clear, non-technical explanation. Emphasize that it is the probability of observing data as extreme as, or more extreme than, the data you have, *assuming the null hypothesis is true*. **Do not state that the p-value is the probability that the null hypothesis is true or false.** Explain that a small p-value suggests the observed data are unlikely if the null hypothesis is true, providing evidence *against* the null hypothesis.      5.  **Caution:**     * Conclude the response with a clear statement that this explanation was generated by a Large Language Model. Advise the user to critically review the output and consult additional statistical resources or experts to ensure correctness and a full understanding.  **Constraint:** Focus solely on interpreting the *output* of the statistical model and providing explanations relevant to that output and the model's requirements. Do not perform new calculations or suggest alternative analyses unless directly prompted by assessing the appropriateness based on provided context.  ── user [1966] ─────────────────────────────────────────────────────────────────── Explain the following linear regression model output:  Call: lm(formula = Sales ~ . + Income:Advertising + Price:Age, data = carseats)  Residuals:     Min      1Q  Median      3Q     Max  -2.9208 -0.7503  0.0177  0.6754  3.3413   Coefficients:                      Estimate Std. Error t value Pr(>|t|)     (Intercept)         8.8341795  0.9995001   8.839  < 2e-16 *** CompPrice           0.0929371  0.0041183  22.567  < 2e-16 *** Income              0.0108940  0.0026044   4.183 3.57e-05 *** Advertising         0.0702462  0.0226091   3.107 0.002030 **  Population          0.0001592  0.0003679   0.433 0.665330     Price              -0.1008064  0.0074399 -13.549  < 2e-16 *** ShelveLoc1          2.4243381  0.0764189  31.724  < 2e-16 *** ShelveLoc2         -0.1570254  0.0341641  -4.596 5.84e-06 *** Age                -0.0579466  0.0159506  -3.633 0.000318 *** Education          -0.0208525  0.0196131  -1.063 0.288361     Urban1              0.0700799  0.0562009   1.247 0.213171     US1                -0.0787786  0.0744617  -1.058 0.290729     Income:Advertising  0.0007510  0.0002784   2.698 0.007290 **  Price:Age           0.0001068  0.0001333   0.801 0.423812     --- Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1  Residual standard error: 1.011 on 386 degrees of freedom Multiple R-squared:  0.8761,    Adjusted R-squared:  0.8719  F-statistic:   210 on 13 and 386 DF,  p-value: < 2.2e-16   ## Additional context to consider   The model uses a data set on child car seat sales at 400 different stores. The goal is to identify factors associated with sales. The variables are:   * Sales: Unit sales (in thousands) at each location (the response variable).   * CompPrice: Price charged by competitor at each location.   * Income: Community income level (in thousands of dollars).   * Advertising: Local advertising budget for the company at each location (in thousands of dollars).   * Population: Population size in the region (in thousands).   * Price: Price the company charges for car seats at each site.   * ShelveLoc: A factor with levels 'Bad', 'Good', and 'Medium' indicating the quality of the shelving location.   * Age: Average age of the local population.   * Education: Education level at each location.   * Urban: A factor ('No', 'Yes') indicating if the store is in an urban or rural location.   * US: A factor ('No', 'Yes') indicating if the store is in the US. The data set is simulated.  ── assistant [4673] ────────────────────────────────────────────────────────────── Here's an explanation of the provided linear regression model output, based on the car seat sales data.  ### 1. Summary of the statistical model:  *   **Statistical Model:** This output represents a **linear regression model**. *   **Purpose:** Linear regression models are used to examine the relationship between a continuous response variable (in this case, `Sales`) and one or more predictor variables (like `Price`, `Income`, `Advertising`, etc.). The goal is to understand how changes in the predictors are associated with changes in the response. *   **Key Assumptions:**     *   **Linearity:** The relationship between the predictors and the response is linear.     *   **Independence:** The errors (residuals) are independent of each other.     *   **Homoscedasticity:** The errors have constant variance across all levels of the predictors.     *   **Normality:** The errors are normally distributed.  ### 2. Appropriateness of the statistical model:  Based on the description of the data, a linear regression model seems like a reasonable starting point.  `Sales` is a continuous variable, and we're interested in how it relates to other variables.  However, it's important to consider the following:  *   **Potential Non-Linearity:** Some relationships might not be linear. For example, the effect of `Advertising` on `Sales` might plateau at higher levels. The interaction term `Income:Advertising` in this model suggests an initial concern about non-linearity in this relationship, so that is good. *   **Interactions:** The model includes interactions between `Income` and `Advertising`, and between `Price` and `Age`, which allows the effect of one variable to depend on the level of another. This is a good idea if you suspect such interactions exist. *   **Categorical Predictors:** The variables `ShelveLoc`, `Urban`, and `US` are categorical, and the linear model can handle these by creating indicator variables (also called dummy variables). This is appropriate. *   **Range Restrictions:** The sales data is recorded in thousands of units. It is possible that there are theoretical lower and upper bounds on the number of sales, depending on the population of each location and how many car seats are available, for example. If the sales data is constrained in this way, linear regression may be inappropriate, as the model assumes the response is continuous without bounds.  ### 3. Suggestions for checking assumptions of the statistical model:  It is *critical* to check the assumptions of the linear regression model *after* fitting it. Here are some ways to do this, with an emphasis on graphical methods:  *   **Linearity:**     *   **Residual Plots:** Plot the residuals against each predictor variable individually.  Look for non-random patterns in the residuals (e.g., a curve, a funnel shape). These patterns suggest a non-linear relationship or the need for a transformation. If curvature is apparent in the residuals, this may indicate the need to include polynomial terms (e.g., $Advertising^2$), or transformations of the predictors (e.g., $log(Advertising)$).     *   **Component + Residual Plots:** These plots can help visualize the linearity assumption for each predictor, especially when there are multiple predictors in the model.  *   **Independence:**     *   **Residual vs. Order Plot:** If the data were collected over time, plot the residuals against the order in which the data were collected. Look for trends or patterns that suggest correlation between residuals.  Since this is cross-sectional data from different stores, this is likely not a major concern.     *   **Durbin-Watson Test:** This is a formal test for autocorrelation in the residuals.  *   **Homoscedasticity (Constant Variance):**     *   **Residual Plot:** Plot the residuals against the fitted values. Look for a funnel shape or other patterns that indicate the variance of the residuals is not constant.     *   **Scale-Location Plot:** This plot (also called a spread-level plot) is similar to the residual plot but can be more sensitive to detecting heteroscedasticity. It plots the square root of the standardized residuals against the fitted values.     *   **Brown-Forsythe Test:** This is a formal test for homoscedasticity.  It's more robust than the Bartlett test when the data are not perfectly normally distributed.  *   **Normality:**     *   **Histogram of Residuals:** Check if the distribution of the residuals is approximately normal.     *   **QQ-Plot:** This plot compares the quantiles of the residuals to the theoretical quantiles of a normal distribution. If the residuals are normally distributed, the points should fall close to a straight line. Deviations from the line indicate departures from normality.     *   **Shapiro-Wilk Test:** This is a formal test for normality.  However, be cautious about relying solely on this test, especially with large sample sizes, as it can be overly sensitive.  *   **Outliers and Influential Points:**     *   **Cook's Distance:** Identify observations that have a disproportionate influence on the regression results.     *   **Leverage Values:** Identify observations with extreme values on the predictor variables.     *   **DFBETAS:** Measure the effect of deleting each observation on the estimated regression coefficients. *   **Variance Inflation Factor (VIF):**     *   **VIF Values:** Check for multicollinearity among the predictor variables. Values exceeding 5 or 10 may indicate strong collinearity.  If the assumptions are violated, consider data transformations (e.g., log transformation of `Sales` if it's right-skewed), adding interaction terms or polynomial terms, or using a different type of model (e.g., a generalized linear model).  ### 4. Interpretation of the output:  *   **Call:** `lm(formula = Sales ~ . + Income:Advertising + Price:Age, data = carseats)`     *   This shows the R command used to fit the linear model.  `Sales` is the response variable, and all other variables in the `carseats` data set are included as predictors (`.`).  Additionally, interaction terms between `Income` and `Advertising`, and `Price` and `Age` were included.  *   **Residuals:**     *   This section provides a summary of the distribution of the residuals (the differences between the observed values and the values predicted by the model).     *   `Min`: The smallest residual is -2.9208 (thousands of units).     *   `1Q`: 25% of the residuals are less than -0.7503 (thousands of units).     *   `Median`: The median residual is 0.0177 (thousands of units). This suggests that the model is, on average, doing a good job of predicting sales.     *   `3Q`: 75% of the residuals are less than 0.6754 (thousands of units).     *   `Max`: The largest residual is 3.3413 (thousands of units).     *   *Ideally, the residuals should be symmetrically distributed around zero.* The median being close to zero is a good sign. The Min and Max give a sense of the range of errors.  *   **Coefficients:**     *   This section provides the estimated coefficients for each predictor in the model, along with their standard errors, t-values, and p-values.  Let's go through them one by one.  Remember that *Sales* is measured in thousands of units, *Income* and *Advertising* are measured in thousands of dollars, *Population* is measured in thousands of people, and *Price* is measured in dollars.     *   `(Intercept) 8.8341795  0.9995001   8.839  < 2e-16 ***`         *   `Estimate`: 8.8341795. This is the estimated sales (in thousands of units) when all other predictors are equal to zero. Note that in many cases this interpretation isn't practically meaningful because it might not make sense for all predictors to be zero simultaneously.         *   `Std. Error`: 0.9995001. This is the standard error of the intercept estimate. It measures the uncertainty in the estimate of the intercept.         *   `t value`: 8.839.  This is the t-statistic, calculated as the estimate divided by its standard error.         *   `Pr(>|t|)`: < 2e-16. This is the p-value.  It's extremely small, meaning that if the true intercept were zero, the probability of observing a t-statistic as extreme as 8.839 (or more extreme) is virtually zero.  This provides very strong evidence that the intercept is not zero.     *   `CompPrice 0.0929371  0.0041183  22.567  < 2e-16 ***`         *   `Estimate`: 0.0929371.  For every increase of $1 in the competitor's price, the car seat sales at our stores are estimated to increase by 0.0929371 thousands of units, holding all other variables constant.         *   `Std. Error`: 0.0041183.  This is the standard error of the `CompPrice` estimate.         *   `Pr(>|t|)`: < 2e-16.  This very small p-value indicates very strong evidence that `CompPrice` is significantly associated with `Sales`.     *   `Income 0.0108940  0.0026044   4.183 3.57e-05 ***`         *   `Estimate`: 0.0108940.  For every increase of $1,000 in the community income level, the car seat sales are estimated to increase by 0.0108940 thousands of units, holding all other variables constant.         *   `Pr(>|t|)`: 3.57e-05.  This small p-value indicates strong evidence that `Income` is significantly associated with `Sales`.     *   `Advertising 0.0702462  0.0226091   3.107 0.002030 **`         *   `Estimate`: 0.0702462.  For every increase of $1,000 in the local advertising budget, car seat sales are estimated to increase by 0.0702462 thousands of units, holding all other variables constant.         *   `Pr(>|t|)`: 0.002030.  This small p-value indicates strong evidence that `Advertising` is significantly associated with `Sales`.     *   `Population 0.0001592  0.0003679   0.433 0.665330`         *   `Estimate`: 0.0001592. For every increase of 1,000 people in the population, car seat sales are estimated to increase by 0.0001592 thousands of units, holding all other variables constant.         *   `Pr(>|t|)`: 0.665330.  This large p-value indicates that there is *not* strong evidence that `Population` is significantly associated with `Sales` in this model.     *   `Price -0.1008064  0.0074399 -13.549  < 2e-16 ***`         *   `Estimate`: -0.1008064.  For every $1 increase in the price of the car seats, the car seat sales are estimated to *decrease* by 0.1008064 thousands of units, holding all other variables constant.         *   `Pr(>|t|)`: < 2e-16. This very small p-value indicates very strong evidence that `Price` is significantly associated with `Sales`.     *   `ShelveLoc1 2.4243381  0.0764189  31.724  < 2e-16 ***`         *   `Estimate`: 2.4243381. This coefficient represents the difference in average sales between stores with \"Good\" shelf location (level 1) and the baseline level of `ShelveLoc` (which is the level that is not explicitly represented in the output - usually the first level alphabetically, or \"Bad\").  Stores with \"Good\" shelf location are estimated to have 2.4243381 thousands of units *more* in sales than stores with \"Bad\" shelf location, holding all other variables constant.         *   `Pr(>|t|)`: < 2e-16. This very small p-value indicates very strong evidence that \"Good\" shelf location is significantly associated with `Sales`, relative to \"Bad\" shelf location.     *   `ShelveLoc2 -0.1570254  0.0341641  -4.596 5.84e-06 ***`         *   `Estimate`: -0.1570254.  This coefficient represents the difference in average sales between stores with \"Medium\" shelf location (level 2) and stores with \"Bad\" shelf location. Stores with \"Medium\" shelf location are estimated to have 0.1570254 thousands of units *less* in sales than stores with \"Bad\" shelf location, holding all other variables constant.         *   `Pr(>|t|)`: 5.84e-06. This very small p-value indicates very strong evidence that \"Medium\" shelf location is significantly associated with `Sales`, relative to \"Bad\" shelf location.     *   `Age -0.0579466  0.0159506  -3.633 0.000318 ***`         *   `Estimate`: -0.0579466. For every year increase in the average age of the local population, the car seat sales are estimated to decrease by 0.0579466 thousands of units, holding all other variables constant.         *   `Pr(>|t|)`: 0.000318. This small p-value indicates strong evidence that `Age` is significantly associated with `Sales`.     *   `Education -0.0208525  0.0196131  -1.063 0.288361`         *   `Estimate`: -0.0208525.  For every unit increase in the education level at the location, car seat sales are estimated to decrease by 0.0208525 thousands of units, holding all other variables constant. The units of education level are not provided.         *   `Pr(>|t|)`: 0.288361. This large p-value indicates that there is *not* strong evidence that `Education` is significantly associated with `Sales` in this model.     *   `Urban1 0.0700799  0.0562009   1.247 0.213171`         *   `Estimate`: 0.0700799. This coefficient represents the difference in average sales between stores in urban locations (level 1) and stores in rural locations (baseline). Stores in urban locations are estimated to have 0.0700799 thousands of units *more* in sales than stores in rural locations, holding all other variables constant.         *   `Pr(>|t|)`: 0.213171. This large p-value indicates that there is *not* strong evidence that `Urban` is significantly associated with `Sales` in this model.     *   `US1 -0.0787786  0.0744617  -1.058 0.290729`         *   `Estimate`: -0.0787786. This coefficient represents the difference in average sales between stores in the US (level 1) and stores not in the US (baseline). Stores in the US are estimated to have 0.0787786 thousands of units *less* in sales than stores not in the US, holding all other variables constant.         *   `Pr(>|t|)`: 0.290729. This large p-value indicates that there is *not* strong evidence that `US` is significantly associated with `Sales` in this model.     *   `Income:Advertising 0.0007510  0.0002784   2.698 0.007290 **`         *   `Estimate`: 0.0007510. This is the interaction effect between `Income` and `Advertising`. It means that the effect of `Advertising` on `Sales` *depends* on the level of `Income`, and vice versa. Specifically, for every increase of $1,000 in income, the effect of advertising on sales increases by 0.0007510 thousands of units.         *   `Pr(>|t|)`: 0.007290. This small p-value suggests that the interaction between `Income` and `Advertising` is statistically significant.     *   `Price:Age 0.0001068  0.0001333   0.801 0.423812`         *   `Estimate`: 0.0001068. This is the interaction effect between `Price` and `Age`. It means that the effect of `Price` on `Sales` *depends* on the level of `Age`, and vice versa.         *   `Pr(>|t|)`: 0.423812. This large p-value suggests that the interaction between `Price` and `Age` is *not* statistically significant in this model.  *   **Signif. codes:** `0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1`     *   This is a legend for the significance codes used to denote the p-values. Three stars (`***`) indicate a p-value less than 0.001, two stars (`**`) indicate a p-value less than 0.01, one star (`*`) indicates a p-value less than 0.05, and a period (`.`) indicates a p-value less than 0.1.  *   **Residual standard error: 1.011 on 386 degrees of freedom**     *   This is the estimated standard deviation of the residuals. It represents the typical size of the errors made by the model. The units are thousands of units.     *   The degrees of freedom (386) are calculated as the number of observations (400) minus the number of parameters estimated in the model (14).  *   **Multiple R-squared: 0.8761, Adjusted R-squared: 0.8719**     *   `Multiple R-squared`: 0.8761. This represents the proportion of the variance in `Sales` that is explained by the model. In this case, 87.61% of the variation in car seat sales is explained by the predictors in the model.     *   `Adjusted R-squared`: 0.8719. This is a modified version of R-squared that adjusts for the number of predictors in the model. It is generally preferred over R-squared because it penalizes the inclusion of unnecessary predictors.     *   Both R-squared values are quite high, suggesting that the model fits the data well.  *   **F-statistic: 210 on 13 and 386 DF, p-value: < 2.2e-16**     *   The F-statistic tests the overall significance of the model. It tests the null hypothesis that *all* of the coefficients (except the intercept) are equal to zero.     *   The very small p-value (< 2.2e-16) indicates that we can reject the null hypothesis and conclude that at least one of the predictors is significantly associated with `Sales`.  ### 5. Caution:  This explanation was generated by a Large Language Model. It is essential to critically review this output and consult additional statistical resources or experts to ensure correctness and a full understanding of the results. Be sure to check the assumptions of the linear model before drawing any firm conclusions.  ── user [1029] ─────────────────────────────────────────────────────────────────── Explain the following linear regression model output:  Call: lm(formula = Sales ~ . + Income:Advertising + Price:Age, data = carseats)  Residuals:     Min      1Q  Median      3Q     Max  -2.9208 -0.7503  0.0177  0.6754  3.3413   Coefficients:                      Estimate Std. Error t value Pr(>|t|)     (Intercept)         8.8341795  0.9995001   8.839  < 2e-16 *** CompPrice           0.0929371  0.0041183  22.567  < 2e-16 *** Income              0.0108940  0.0026044   4.183 3.57e-05 *** Advertising         0.0702462  0.0226091   3.107 0.002030 **  Population          0.0001592  0.0003679   0.433 0.665330     Price              -0.1008064  0.0074399 -13.549  < 2e-16 *** ShelveLoc1          2.4243381  0.0764189  31.724  < 2e-16 *** ShelveLoc2         -0.1570254  0.0341641  -4.596 5.84e-06 *** Age                -0.0579466  0.0159506  -3.633 0.000318 *** Education          -0.0208525  0.0196131  -1.063 0.288361     Urban1              0.0700799  0.0562009   1.247 0.213171     US1                -0.0787786  0.0744617  -1.058 0.290729     Income:Advertising  0.0007510  0.0002784   2.698 0.007290 **  Price:Age           0.0001068  0.0001333   0.801 0.423812     --- Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1  Residual standard error: 1.011 on 386 degrees of freedom Multiple R-squared:  0.8761,    Adjusted R-squared:  0.8719  F-statistic:   210 on 13 and 386 DF,  p-value: < 2.2e-16   ## Additional context to consider   The model uses a data set on child car seat sales at 400 different stores. The goal is to identify factors associated with sales. The variables are:   * Sales: Unit sales (in thousands) at each location (the response variable).   * CompPrice: Price charged by competitor at each location.   * Income: Community income level (in thousands of dollars).   * Advertising: Local advertising budget for the company at each location (in thousands of dollars).   * Population: Population size in the region (in thousands).   * Price: Price the company charges for car seats at each site.   * ShelveLoc: A factor with levels 'Bad', 'Good', and 'Medium' indicating the quality of the shelving location.   * Age: Average age of the local population.   * Education: Education level at each location.   * Urban: A factor ('No', 'Yes') indicating if the store is in an urban or rural location.   * US: A factor ('No', 'Yes') indicating if the store is in the US. The data set is simulated.  ── assistant [41] ──────────────────────────────────────────────────────────────── I see you have provided the same linear regression model output and context as before. Would you like me to proceed as before and explain the provided output and context again? Or do you have new instructions?"},{"path":"/articles/statlingua.html","id":"follow-up-questions","dir":"Articles","previous_headings":"Explaining Statistical Model Output","what":"Follow-up Questions","title":"statlingua","text":"powerful feature using LLMs ability engage conversation. initial explanation sparks questions, want clarification specific part, can continue conversation using client object. Simply use $chat() method follow-question. example, ask details R-squared previous explanation: Okay, let’s delve deeper meaning R-squared adjusted R-squared context car seat sales model. R-squared (Multiple R-squared): R-squared value 0.8761 tells us approximately 87.61% variability car seat sales (Sales) across 400 stores can explained predictor variables included linear regression model. words, 87.61% differences sales levels store store can attributed factors competitor’s price (CompPrice), community income (Income), advertising budget (Advertising), company’s price (Price), shelf location (ShelveLoc), average age local population (Age), education level (Education), whether store urban area (Urban), whether store US (US), interactions income advertising, price age. Practical Interpretation: Imagine ’re trying understand stores sell car seats others. R-squared value suggests model pretty good job explaining differences. Knowing values predictor variables allows predict sales reasonably well. R-squared 0 mean predictor variables useless predicting sales. R-squared 1 mean predictor variables perfectly predict sales levels. Caveats: Correlation vs. Causation: R-squared indicates well model fits data. imply causation. Just variables associated sales doesn’t necessarily mean changing advertising cause sales increase, setting particular price cause sales decrease. factors play, relationships complex. Overfitting: high R-squared doesn’t automatically mean model good. ’s possible “overfit” data including many predictors, especially truly related response. Overfitting leads model performs well data trained poorly new data. adjusted R-squared important. Adjusted R-squared: adjusted R-squared (0.8719) modification R-squared penalizes addition predictors don’t significantly improve model’s fit. always less equal R-squared. Purpose Adjustment: R-squared always increase (stay ) add variables model, even variables just random noise. Adjusted R-squared accounts decreasing new variable doesn’t add enough explanatory power offset increase model complexity (.e., number parameters). Interpretation Case: adjusted R-squared slightly lower R-squared, suggests predictors included model , balance, contributing meaningful information car seat sales. adjusted R-squared substantially lower R-squared, indicate predictors might superfluous simpler model might preferable. Model Comparison: Adjusted R-squared particularly useful comparing models different numbers predictors. choosing two models, one higher adjusted R-squared generally preferred (else equal). Summary: R-squared adjusted R-squared values car seat sales model suggest model explains large proportion variance sales, included predictors , part, contributing meaningfully model’s explanatory power. However, crucial remember values just one aspect model evaluation. ’s important also consider model’s assumptions, significance individual predictors, potential overfitting drawing firm conclusions. hope elaboration helpful!","code":"msg <- \"Elaborate further on the meaning of R-squared in this example, specifically for the Carseats model.\" # The client remembers the context of the previous interaction client$chat(msg) |> cat()"},{"path":"/articles/statlingua.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"statlingua","text":"statlingua package offers novel way make statistical outputs accessible leveraging natural language processing capabilities Large Language Models. providing clear context along R model objects, can obtain detailed understandable explanations. information, please refer documentation individual functions like help(explain). encounter issues suggestions, please consider reporting package’s development site (e.g., GitHub).","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Brandon M. Greenwell. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Greenwell BM (2025). statlingua: Explain Statistical Output Large Language Models. https://github.com/bgreenwell/statlingua, https://bgreenwell.github.io/statlingua/.","code":"@Manual{,   title = {statlingua: Explain Statistical Output with Large Language Models},   author = {Brandon M. Greenwell},   year = {2025},   note = {https://github.com/bgreenwell/statlingua, https://bgreenwell.github.io/statlingua/}, }"},{"path":"/index.html","id":"statlingua-","dir":"","previous_headings":"","what":"Explain Statistical Output with Large Language Models","title":"Explain Statistical Output with Large Language Models","text":"WARNING: package work progress! Use caution. statlingua R package leveraging large language models help convert complex statistical output straightforward, understandable, context-aware natural language descriptions. feeding statistical models outcomes tool, can effortlessly produce human-readable interpretations coefficients, p-values, measures model fit, key metrics, thereby democratizing statistical understanding individuals varying levels technical expertise. now, statlingua explicitly supports following types statistical models: Objects class \"htest\" (e.g., R’s built-t.test() prop.test() functions). Linear generalized linear models (.e., R’s built-lm() glm() functions). Linear generalized linear mixed-effects model packages nlme lme4. Generalized additive models package mgcv. Survival regression models package survival. Proportional odds regression models package MASS. Decision trees package rpart. currently unsupported models, useful default method available attempt provide reasonable explanation provided statistical output/R object.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Explain Statistical Output with Large Language Models","text":"statlingua package currently available CRAN, can install development version GitHub.","code":"# Install the latest development version from GitHub: if (!requireNamespace(\"remotes\")) {   install.packages(\"remotes\") } remotes::install_github(\"bgreenwell/statlingua\")"},{"path":"/index.html","id":"todowishlist","dir":"","previous_headings":"","what":"TODO/wishlist","title":"Explain Statistical Output with Large Language Models","text":"ideas ways enhance package:","code":""},{"path":"/index.html","id":"granular-control-over-explanation-output","dir":"","previous_headings":"TODO/wishlist","what":"Granular Control Over Explanation Output","title":"Explain Statistical Output with Large Language Models","text":"Currently, explanations guided pre-defined prompts offering standardized output. make versatile: User-Defined Detail Level: Allow users specify desired verbosity explanation, example, argument like detail_level = “brief”, “moderate”, “detailed”. adjust system prompt ask LLM concise elaborate interpretations. Target Audience Customization: Introduce option tailor explanation’s technical depth different audiences (e.g., audience = \"novice\", \"researcher\", \"domain_expert_no_stats_bg\"). modify prompt use simpler language analogies novices, technical terms experts. Selective Explanations: Enable users request explanations specific parts model output, focusing “coefficients,” “model fit statistics,” “random effects” mixed models. implemented adding parameters explain() function dynamically adjust system prompts sent LLM.","code":""},{"path":"/index.html","id":"interactive-explanation-mode--follow-up-questions","dir":"","previous_headings":"TODO/wishlist","what":"Interactive Explanation Mode & Follow-up Questions","title":"Explain Statistical Output with Large Language Models","text":"current explain() function provides comprehensive, one-time explanation. Enhancing interactivity significantly boost utility learning exploration tool: Conversational Analysis: initial explanation generated, allow users ask follow-questions directly within R console (e.g., “Can explain intercept simpler terms?” “R-squared value imply ?”). Contextual Memory: system need maintain context initial model output LLM’s first explanation answer follow-questions coherently. leverage chat history capabilities underlying ellmer package’s chat objects. transform statlingua static explanation generator dynamic, conversational partner statistical understanding.","code":""},{"path":"/index.html","id":"support-for-model-comparison-explanations","dir":"","previous_headings":"TODO/wishlist","what":"Support for Model Comparison Explanations","title":"Explain Statistical Output with Large Language Models","text":"Users often fit multiple models need compare . statlingua extended assist : Comparative Analysis: Develop functionality users can input two model objects (e.g., lm objects nested model sequence, different models fit data). Guided Interpretation: LLM prompted explain key differences models, interpret comparison statistics (like anova() calls, differences AIC/BIC), discuss potential reasons preferring one model another, based provided context statistical output. address common often complex task statistical modeling.","code":""},{"path":"/index.html","id":"enhanced-integration-with-reporting-workflows--diverse-output-formats","dir":"","previous_headings":"TODO/wishlist","what":"Enhanced Integration with Reporting Workflows & Diverse Output Formats","title":"Explain Statistical Output with Large Language Models","text":"Markdown good default, providing output options smoother integration R’s reporting ecosystem beneficial: HTML: direct inclusion web pages RMarkdown HTML outputs beyond standard rendering. LaTeX: users preparing academic papers. R Objects: Convert parts explanation (like structured summaries key findings) R objects like gt tables flextable objects programmatic control reports. Reporting Helpers: Include helper functions simplify embedding statlingua explanations RMarkdown Quarto documents. might involve custom knitr S3 methods statlingua_explanation objects dedicated functions handle chunk options verbosity, audience, etc. make easier users incorporate statlingua’s insights documents presentations.","code":""},{"path":"/index.html","id":"deeper-guidance-on-model-assumption-checking","dir":"","previous_headings":"TODO/wishlist","what":"Deeper Guidance on Model Assumption Checking","title":"Explain Statistical Output with Large Language Models","text":"current prompts already good job mentioning model assumptions suggesting checks (seen files like inst/prompts/system_prompt_lm.md inst/prompts/system_prompt_coxph.md). taken step : Interpreting Diagnostic Plots/Tests: Allow users optionally pass output common diagnostic functions (e.g., plots generated plot(model_object), results car::Anova(), performance::check_model(), survival::cox.zph()) explain() function. Holistic Interpretation: LLM prompted interpret diagnostic outputs conjunction main model summary. provide users integrated understanding whether model assumptions met, potential implications violations, might affect interpretation primary model results. Contextual Caveats: explanation also include specific caveats recommendations based supplied diagnostic information. empower users just understand model output, also critically evaluate validity.","code":""},{"path":"/reference/explain.html","id":null,"dir":"Reference","previous_headings":"","what":"Explain statistical output — explain","title":"Explain statistical output — explain","text":"Use LLM explain output various statistical objects using straightforward, understandable, context-aware natural language descriptions.","code":""},{"path":"/reference/explain.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Explain statistical output — explain","text":"","code":"explain(object, client, context = NULL, concatenate = FALSE, ...)  # Default S3 method explain(object, client, context = NULL, concatenate = FALSE, ...)  # S3 method for class 'htest' explain(object, client, context = NULL, concatenate = FALSE, ...)  # S3 method for class 'lm' explain(object, client, context = NULL, concatenate = FALSE, ...)  # S3 method for class 'glm' explain(object, client, context = NULL, concatenate = FALSE, ...)  # S3 method for class 'polr' explain(object, client, context = NULL, concatenate = FALSE, ...)  # S3 method for class 'lme' explain(object, client, context = NULL, concatenate = FALSE, ...)  # S3 method for class 'lmerMod' explain(object, client, context = NULL, concatenate = FALSE, ...)  # S3 method for class 'glmerMod' explain(object, client, context = NULL, concatenate = FALSE, ...)  # S3 method for class 'gam' explain(object, client, context = NULL, concatenate = FALSE, ...)  # S3 method for class 'survreg' explain(object, client, context = NULL, concatenate = FALSE, ...)  # S3 method for class 'coxph' explain(object, client, context = NULL, concatenate = FALSE, ...)  # S3 method for class 'rpart' explain(object, client, context = NULL, concatenate = FALSE, ...)"},{"path":"/reference/explain.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Explain statistical output — explain","text":"object appropriate statistical object. example, object can output calling t.test() glm(). client Chat object (e.g., calling chat_openai() [chat_gemini()][ellmer::chat_gemini)]). [ellmer::chat_gemini)]: R:ellmer::chat_gemini) context Optional character string providing additional context, background research question information data. concatenate Logical indicating whether return unformatted character string (FALSE) concatenate results formatted output (TRUE) using cat(). Default FALSE. ... Additional optional arguments. (Currently ignored.)","code":""},{"path":"/reference/explain.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Explain statistical output — explain","text":"Either character string providing LLM explanation (return_client = FALSE) list containing LLM client response (return_client = TRUE).","code":""},{"path":"/reference/explain.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Explain statistical output — explain","text":"","code":"if (FALSE) { # \\dontrun{ # Polynomial regression cars_lm <- lm(dist ~ poly(speed, degree = 2), data = cars) context <- \" The data give the speed of cars (mph) and the distances taken to stop (ft). Note that the data were recorded in the 1920s. \" # Use Google Gemini to explain the output; requires an API key; see # ?ellmer::chat_google_gemini for details client <- ellmer::chat_google_gemini(echo = \"none\") ex <- explain(cars_lm, client = client, context = context)  # Poisson regression example from ?stats::glm counts <- c(18,17,15,20,10,20,25,13,12) outcome <- gl(3,1,9) treatment <- gl(3,3) data.frame(treatment, outcome, counts) # showing data D93_glm <- glm(counts ~ outcome + treatment, family = poisson())  # Use Google Gemini to explain the output; requires an API key; see # ?ellmer::chat_google_gemini for details client <- ellmer::chat_google_gemini() explain(D93_glm, client = client) } # }"},{"path":"/reference/summarize.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize statistical output — summarize","title":"Summarize statistical output — summarize","text":"Generate text-based summaries statistical output can embedded prompts querying Large Language Models (LLMs). Intended primarily internal use.","code":""},{"path":"/reference/summarize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize statistical output — summarize","text":"","code":"summarize(object, ...)  # Default S3 method summarize(object, ...)  # S3 method for class 'htest' summarize(object, ...)  # S3 method for class 'lm' summarize(object, ...)  # S3 method for class 'glm' summarize(object, ...)  # S3 method for class 'polr' summarize(object, ...)  # S3 method for class 'lme' summarize(object, ...)  # S3 method for class 'lmerMod' summarize(object, ...)  # S3 method for class 'glmerMod' summarize(object, ...)  # S3 method for class 'gam' summarize(object, ...)  # S3 method for class 'survreg' summarize(object, ...)  # S3 method for class 'coxph' summarize(object, ...)  # S3 method for class 'rpart' summarize(object, ...)"},{"path":"/reference/summarize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize statistical output — summarize","text":"object object summary desired (e.g., glm object). ... Additional optional arguments. (Currently ignored.)","code":""},{"path":"/reference/summarize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize statistical output — summarize","text":"character string summarizing statistical output.","code":""},{"path":[]},{"path":"/reference/summarize.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize statistical output — summarize","text":"","code":"tt <- t.test(1:10, y = c(7:20)) summarize(tt)  # prints output as a character string #> [1] \"\\n\\tWelch Two Sample t-test\\n\\ndata:  1:10 and c(7:20)\\nt = -5.4349, df = 21.982, p-value = 1.855e-05\\nalternative hypothesis: true difference in means is not equal to 0\\n95 percent confidence interval:\\n -11.052802  -4.947198\\nsample estimates:\\nmean of x mean of y \\n      5.5      13.5 \\n\" cat(summarize(tt))  # more useful for reading #>  #> \tWelch Two Sample t-test #>  #> data:  1:10 and c(7:20) #> t = -5.4349, df = 21.982, p-value = 1.855e-05 #> alternative hypothesis: true difference in means is not equal to 0 #> 95 percent confidence interval: #>  -11.052802  -4.947198 #> sample estimates: #> mean of x mean of y  #>       5.5      13.5"},{"path":"/news/index.html","id":"statlingua-010","dir":"Changelog","previous_headings":"","what":"statlingua 0.1.0","title":"statlingua 0.1.0","text":"explain() generic gained default fallback method (thanks @Grandhe-Sundhar). Closes #3.","code":""}]
